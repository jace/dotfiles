# Flag for ~/.zshrc to avoid double sourcing
export DOT_ZPROFILE_SOURCED=1

# Linux desktops source ~/.profile on login but CLI and macOS don't.
# Source if not already done
if [[ "${DOT_PROFILE_SOURCED:-}" != 1 ]]; then
  emulate sh -c ". $HOME/.profile" 
fi

# If we have Homebrew, setup its ZSH environment
if [[ -n "$HOMEBREW_PREFIX" ]]; then
  # Add ZSH completions to $fpath
  for DIR in "$HOMEBREW_PREFIX/share/zsh/site-functions" "$HOMEBREW_PREFIX/share/zsh-completions"; do
    if [[ -d "$DIR" ]] && [[ !${fpath[(Ie)$DIR]} ]]; then
      fpath+=($DIR)
    fi
  done

  # Hint: The (N,F) suffix is a ZSH glob qualifier
  #   N: Turns on NULL_GLOB to avoid erroring if there are no matches (skips the for loop instead)
  #   F: Only matches "full" (non-empty) directories

  # Add Homebrew gnubin folders to $path
  for DIR in "$HOMEBREW_PREFIX"/opt/*/libexec/gnubin(N,F); do
    if [[ !${path[(Ie)$DIR]} ]]; then
      path=("$DIR" $path)
    fi
  done
  # Add Homebrew gnuman folders to $manpath
  for DIR in "$HOMEBREW_PREFIX"/opt/*/libexec/gnuman(N,F); do
    if [[ !${manpath[(Ie)$DIR]} ]]; then
      manpath=("$DIR" $manpath)
    fi
  done

  # Add some Homebrew keg-only formulae to $path.
  # Homebrew's Ruby is keg-only for unclear reasons,
  # but various other tools expect a modern `ruby` in the path,
  # so we're going to put it there until we find a compelling reason not to.
  # Same for a few others

  for OPT in curl ruby; do
    DIR="$HOMEBREW_PREFIX/opt/$OPT/bin"
    if [[ -d "$DIR" ]] && [[ !${path[(Ie)$DIR]} ]]; then
      path=("$DIR" $path)
    fi
  done
fi

# Add local bin paths
for DIR in "$HOME/.cargo/bin" "$HOME/.local/bin" "$HOME/bin"; do
  if [ -d "$DIR" ] && [[ !${path[(Ie)$DIR]} ]]; then
    path=("$DIR" $path)
  fi
done

# Unset temp variables
unset OPT
unset DIR
